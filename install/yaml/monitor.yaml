---
# Source: monitor/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitor
---
# Source: monitor/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: monitor-conf
  namespace: dts
data:
  prometheus.yml: |-
    # monitor 初始化配置
    # 全局配置， 通常可以被job单独的配置覆盖
    global:
      # target 定时任务周期
      scrape_interval: 1m
      # 拉取指标超时
      scrape_timeout: 50s
      # 执行 rules 规则的时间
      evaluation_interval: 1m
      external_labels:
        cluster: monitor-ha
    
    # 规则文件列表
    rule_files:
      - /etc/monitor/rules.yml
    
    # 告警组件
    alerting:
      alert_relabel_configs:
        - source_labels: [ tid, exporter, ip ]
          separator: ;
          regex: (.*);(.*);(.*)
          target_label: routing_key
          replacement: ${1}__${2}__${3}
          action: replace
      # 告警配置文件
      alertmanagers:
        - api_version: v1
          static_configs:
            - targets: [ "alertmanager:9093" ]
          timeout: 10s
          path_prefix: /
    
    # 数据抓取配置
    scrape_configs:
      - job_name: dts-exporter
        scrape_interval: 15s
        scrape_timeout: 10s
        metrics_path: /api/motion/v2/metrics
        scheme: http
        static_configs:
          - targets: [
            'dts-api-server.dts:3000'
          ]
---
# Source: monitor/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: monitor-dts
rules:
  - apiGroups: [ "apps" ]
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - watch
      - create
      - update
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/metrics
      - nodes/proxy
      - services
      - endpoints
      - pods
      - events
      - configmaps
      - secrets
      - namespaces
    verbs: ["get", "list", "watch", "create", "update"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
# Source: monitor/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: monitor-dts
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: monitor-dts
subjects:
  - kind: ServiceAccount
    name: monitor
    namespace: dts
---
# Source: monitor/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: monitor-headless
  namespace: dts
  labels:
    app.kubernetes.io/name: monitor
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: monitor
  ports:
    - name: web
      protocol: TCP
      port: 9090
      targetPort: web
    - name: grpc
      port: 10901
      targetPort: grpc
---
# Source: monitor/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: monitor
  labels:
    name: monitor
    namespace: dts
    kubernetes.io/cluster-service: 'true'
spec:
  ports:
    - name: monitor
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app.kubernetes.io/name: monitor
  sessionAffinity: None
  type: NodePort
---
# Source: monitor/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: monitor
  namespace: dts
  labels:
    app.kubernetes.io/name: monitor
spec:
  serviceName: monitor-headless
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: monitor
  template:
    metadata:
      name: monitor
      labels:
        app.kubernetes.io/name: monitor
        qfusion/useIstio: "true"
        mgrds/run: "master"
    spec:
      serviceAccountName: monitor
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: dts-monitor-conf
          image: k8smaster.qfusion.irds/irds/alpine:3.18.2
          command:
            - sh
            - -c
            - |
              cd /dts-monitor
              cp -p * /dts-conf/
              chmod 777 /dts-data
          volumeMounts:
            - name: monitor-conf
              mountPath: /dts-monitor
            - name: shared-conf
              mountPath: /dts-conf
            - name: dts-data
              mountPath: /dts-data
      containers:
        - name: prometheus
          image: k8smaster.qfusion.irds/irds/prometheus:v2.47.0
          imagePullPolicy: IfNotPresent
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --web.enable-lifecycle
            - --storage.tsdb.retention=180d
            - --storage.tsdb.path=/prometheus/data
            - --storage.tsdb.retention.time=10d
            - --web.route-prefix=/
            - --storage.tsdb.no-lockfile
            - --storage.tsdb.min-block-duration=2h
            - --storage.tsdb.max-block-duration=2h
            - --log.level=debug
          ports:
            - name: web
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /-/healthy
              port: web
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 120
            httpGet:
              path: /-/ready
              port: web
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          volumeMounts:
            - name: monitor-conf
              mountPath: /etc/prometheus
            - name: dts-data
              mountPath: /prometheus/data
            - name: shared-conf
              mountPath: /dts-conf
            - name: timezone
              mountPath: /etc/timezone
            - name: localtime
              mountPath: /etc/localtime
      volumes:
        - name: monitor-conf
          configMap:
            defaultMode: 432
            name: monitor-conf
        - name: shared-conf
          emptyDir: { }
        - name: tmpl-volume
          emptyDir: { }
        - name: timezone
          hostPath:
            path: /etc/timezone
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: dts-data
          hostPath:
            path: /opt/qfusion/dts-monitor
      affinity: 
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: prometheus
            topologyKey: kubernetes.io/hostname
      
      nodeSelector: 
        qfusion/master: "true"
      tolerations: 
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
